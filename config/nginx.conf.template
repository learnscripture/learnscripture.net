
# Remove www prefix:
server {
    listen 80;
    server_name www.learnscripture.net;
    rewrite     ^/(.*) http://learnscripture.net/$1 permanent;
}


server {
    listen 80;
    server_name %(domains_nginx)s;
    return         301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name %(domains_nginx)s;
    client_max_body_size 10M;
    keepalive_timeout    15;
    error_log /home/%(proj_user)s/logs/%(proj_name)s_error_nginx.log info;

    ssl_certificate      /etc/letsencrypt/live/learnscripture.net/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/learnscripture.net/privkey.pem;

    # Based on 'intermediate' compatibility 2015-05-25 from:
    # https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache    shared:SSL:50m;
    ssl_session_timeout  1d;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    # See     https://weakdh.org/sysadmin.html
    ssl_dhparam            /etc/nginx/ssl/dhparams.pem;
    ssl_verify_depth       4;

    gzip on;
    gzip_types text/plain application/xml text/css text/javascript application/javascript application/x-javascript;
    gzip_min_length 1000;
    gzip_vary on;

    # Deny illegal Host headers
    if ($host !~* ^(%(domains_regex)s)$) {
        return 444;
    }

    location /static {
        alias            %(STATIC_ROOT)s;
        access_log      off;
        log_not_found   off;
        expires 30d;
        location /static/CACHE {
            expires max;
        }

    }

    location /usermedia {
        alias            %(MEDIA_ROOT)s;
        access_log      off;
        log_not_found   off;
        expires 30d;
        location /usermedia/CACHE {
            expires max;
        }
    }

    location /robots.txt {
        alias            %(STATIC_ROOT)s/robots.txt;
        access_log      off;
        log_not_found   off;
    }

    location /favicon.ico {
        alias            %(STATIC_ROOT)s/static/img/favicon.png;
        access_log      off;
        log_not_found   off;
    }

    # Finally, send all non-media requests to the Django server.
    location / {

        add_header "X-UA-Compatible" "IE=Edge";

        # This is needed only for certbot/letsencrypt to work
        root %(STATIC_ROOT)s/root;

        if (!-f $request_filename) {
            uwsgi_pass unix:/tmp/%(proj_name)s_uwsgi.sock;
        }

        add_header X-Frame-Options "SAMEORIGIN";

        include uwsgi_params;
        uwsgi_param HTTPS $https if_not_empty;

        send_timeout 180;
        uwsgi_send_timeout 180;
        uwsgi_read_timeout 180;
    }
}
